name: release - build test and push

on:
  release:
    types: [created, edited]

env:
  QUAY_ROBOT_USER: observ-vol-mgt+quay_io_observ_vol_mgt_github_actions_robot

jobs:
  build-test-push:
    permissions:
      contents: write
    name: build-test-push
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"    
    - name: install make
      run: sudo apt-get install make
    - name: checkout
      uses: actions/checkout@v4
    - name: login to quay.io
      uses: docker/login-action@v3
      with:
        registry: quay.io
        username: ${{ env.QUAY_ROBOT_USER }}
        password: ${{ secrets.QUAY_SECRET }}
    - name: Update project level docs
      run: |
          VERSION=${{ github.event.release.tag_name }} make ci_push
    - uses: dorny/paths-filter@v3
      id: changes
      with:
        filters: |
          controller:
            - 'controller/**'
          manager_configurator:
            - 'manager/configurator/**'
          manager_alertmanager:
            - 'manager/alertmanager/**'
          processor:
            - 'processor/**'
          otel_collector_proxy:
            - 'otel-collector-proxy/**'
    - name: run controller tests
      if: steps.changes.outputs.controller == 'true'
      run: |
          cd controller
          VERSION=${{ github.event.release.tag_name }} make ci_push
    - name: push manager configurator image
      if: steps.changes.outputs.manager_configurator == 'true'
      run: |
          cd manager/configurator
          VERSION=${{ github.event.release.tag_name }} make ci_push
    - name: push manager alermanager image
      if: steps.changes.outputs.manager_alertmanager == 'true'
      run: |
          cd manager/alertmanager
          VERSION=${{ github.event.release.tag_name }} make ci_push
    - name: push processor image
      if: steps.changes.outputs.processor == 'true'
      run: |
          cd processor
          VERSION=${{ github.event.release.tag_name }} make ci_push
    - name: push otel-collector-proxy image
      if: steps.changes.outputs.otel_collector_proxy == 'true'
      run: |
          cd otel-collector-proxy
          VERSION=${{ github.event.release.tag_name }} make ci_push
